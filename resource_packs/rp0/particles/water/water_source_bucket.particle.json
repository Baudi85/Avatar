{
	"format_version": "1.10.0",
	"particle_effect": {
		"description": {
			"identifier": "nom:water_source_bucket",
			"basic_render_parameters": {
				"material": "particles_blend",
				"texture": "textures/particle/water_source"
			}
		},
		"curves": {
			"variable.size": {
				"type": "bezier",
				"input": "v.particle_age/v.particle_lifetime",
				"horizontal_range": 1,
				"nodes": [
					0,
					1,
					1,
					0
				]
			},
			"variable.alpha": {
				"type": "linear",
				"input": "v.particle_age/v.particle_lifetime",
				"horizontal_range": 1,
				"nodes": [
					0,
					0.1,
					0.25,
					0.6,
					1,
					1,
					0.95,
					0.8,
					0.56,
					0.38,
					0.25,
					0.19,
					0.13,
					0.07,
					0
				]
			},
			"variable.blue": {
				"type": "linear",
				"input": "v.particle_age/v.particle_lifetime",
				"horizontal_range": 1,
				"nodes": [
					0,
					1,
					0
				]
			}
		},
		"components": {
			"minecraft:emitter_rate_steady": {
				"spawn_rate": 2,
				"max_particles": 1
			},
			"minecraft:emitter_lifetime_once": {
				"active_time": 1
			},
			"minecraft:emitter_shape_box": {
				"half_dimensions": [
					0.4,
					0,
					0.4
				],
				"direction": "outwards"
			},
			"minecraft:particle_lifetime_expression": {
				"max_lifetime": "math.random(0.8,1.2)"
			},
			"minecraft:particle_initial_spin": {
				"rotation": "math.random(-45,45)"
			},
			"minecraft:particle_initial_speed": 0,
			"minecraft:particle_motion_dynamic": {},
			"minecraft:particle_appearance_billboard": {
				"size": [
					"0.5*(variable.alpha*math.sin(v.particle_age*360))*0.3",
					"0.5*(variable.alpha*math.sin(v.particle_age*360))*0.3"
				],
				"facing_camera_mode": "direction_z",
				"direction": {
					"mode": "custom",
					"custom_direction": [
						0,
						-1,
						0
					]
				},
				"uv": {
					"texture_width": 16,
					"texture_height": 16,
					"uv": [
						0,
						0
					],
					"uv_size": [
						16,
						16
					]
				}
			},
			"minecraft:particle_appearance_tinting": {
				"color": [
					"Math.clamp(variable.alpha, 0, 1)",
					"Math.clamp(variable.alpha, 0, 1)",
					1,
					"Math.clamp(v.alpha*0.8, 0, 1)"
				]
			}
		}
	}
}