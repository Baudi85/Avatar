{
	"format_version": "1.10.0",
	"minecraft:client_entity": {
		"description": {
			"scripts": {
				"initialize": [
					"v.skin_id = q.skin_id;",
					"v.mark_variant = q.mark_variant;",
					"v.variant = q.variant;",
					"v.is_ignited = q.is_ignited;",
					"v.is_sheared = q.is_sheared;",
					"v.is_chested = q.is_chested;",
					"v.is_saddled = q.is_saddled;",
					"v.is_baby = q.is_baby;",
					"v.is_stunned = q.is_stunned;",
					"v.is_charged = q.is_charged;",
					"v.is_illager_captain = q.is_illager_captain;",
					"v.camera_rotation_y = q.camera_rotation(1);",
					"v.camera_rotation_x = q.camera_rotation(0);",
					"v.distance_from_camera = q.distance_from_camera;",
					"v.rotation_to_camera_y = q.rotation_to_camera(1);",
					"v.rotation_to_camera_x = q.rotation_to_camera(0);",
					"v.emotion_id = 0;",
					"v.target_x_rotation = 0;",
					"v.target_y_rotation = 0;",
					"v.movement_direction_y = 0;",
					"v.defeated_overlay = 0;",
					"v.time_since_defeated = 0;",
					"v.fade_away = 0;",
					"v.ground_speed=0;",
					"v.mod_move_speed=0;",
					"v.is_first_person=0;",
					"v.prop_1 = 0;",
					"v.random_variant = math.random_integer(0, 2);",
					"v.y_offset_start = 3;",
					"v.random_left_height = math.round(math.random(-8,8));",
					"v.random_center_height = math.round(math.random(-4,4));",
					"v.random_right_height = math.round(math.random(-8,8));",
					"v.initial_y = q.position(1);",
					"t.initial_y = v.initial_y;",
					"v.variant_was = 0;",
					"v.synced_random_x = 0;",
					"v.synced_random_y = 0;",
					"v.synced_random_z = 0;"
				],
				"pre_animation": [
					"v.skin_id = q.skin_id;",
					"v.mark_variant = q.mark_variant;",
					"v.variant = q.variant;",
					"v.is_ignited = q.is_ignited;",
					"v.is_sheared = q.is_sheared;",
					"v.is_chested = q.is_chested;",
					"v.is_saddled = q.is_saddled;",
					"v.is_baby = q.is_baby;",
					"v.is_stunned = q.is_stunned;",
					"v.is_charged = q.is_charged;",
					"v.distance_from_camera = q.distance_from_camera;",
					"v.is_illager_captain = q.is_illager_captain;",
					"v.camera_rotation_y = q.camera_rotation(1);",
					"v.camera_rotation_x = q.camera_rotation(0);",
					"v.rotation_to_camera_y = q.rotation_to_camera(1);",
					"v.rotation_to_camera_x = q.rotation_to_camera(0);",
					"v.target_x_rotation = query.target_x_rotation;",
					"v.target_y_rotation = query.target_y_rotation;",
					"v.movement_direction_y = q.movement_direction(1);",
					"v.ground_speed=q.ground_speed;",
					"v.mod_move_speed=query.modified_move_speed;",
					"v.yfactor = 92;",
					"v.xfactor = 100;",
					"v.interact_range = 3.9;",
					"v.cam_y_rot = q.camera_rotation(1) - q.rotation_to_camera(1) + 180;",
					"v.cam_y_rot = v.cam_y_rot > 180 ? v.cam_y_rot-360: v.cam_y_rot;",
					"v.cam_y_size = (1/query.distance_from_camera)*v.yfactor;",
					"v.cam_y_size = query.distance_from_camera < 2.5 ? v.cam_y_size*2: v.cam_y_size;",
					"v.cam_y_size = query.distance_from_camera < 1.5 ? v.cam_y_size*2 : v.cam_y_size;",
					"v.is_selected_y = (v.cam_y_rot > v.cam_y_size || v.cam_y_rot < -v.cam_y_size) ? 0 : 1;",
					"v.cam_x_rot = -q.camera_rotation(0) - q.rotation_to_camera(0) - (60/query.distance_from_camera);",
					"v.cam_x_rot = v.cam_x_rot > 180 ? v.cam_x_rot-360: v.cam_x_rot;",
					"v.cam_x_size = (1/query.distance_from_camera)*v.xfactor;",
					"v.cam_x_size = query.distance_from_camera < 2.5 ? v.cam_x_size*2 : v.cam_x_size;",
					"v.cam_x_size = query.distance_from_camera < 1.5 ? v.cam_x_size*1.4 : v.cam_x_size;",
					"v.is_selected_x = (v.cam_x_rot > v.cam_x_size || v.cam_x_rot < -v.cam_x_size) ? 0 : 1;",
					"v.is_selected_range = query.distance_from_camera <= v.interact_range;",
					"v.is_selected = v.is_selected_x && v.is_selected_y && v.is_selected_range;",
					"v.y_init = q.variant == 2 || q.variant == 3 || v.prop_1 == 1 ? q.position(1) : (v.y_init ?? 0);",
					"v.y_offset_level = q.position(1) - v.y_init;",
					"v.y_offset_start = (q.variant != 1) ? Math.max(0, v.y_offset_start-0.1) : v.y_offset_start;",
					"v.y_offset = v.y_offset_level + v.y_offset_start;",
					"v.current_y = q.position(1);",
					"v.variant_was = q.variant;",
					"v.prop_1 = 0;",
					"v.synced_random_x = math.random(-1,1);",
					"v.synced_random_y = math.random(-1,1);",
					"v.synced_random_z = math.random(-1,1);"
				],
				"scale": "q.variant != 1 ? 1 : 0",
				"animate": [
					"controller",
					"y_offset",
					"random_pose",
					{
						"earth_wall_debris": "q.modified_move_speed>0.1"
					}
				]
			},
			"materials": {
				"default": "villager",
				"outline": "outline",
				"charged": "charged_creeper",
				"emissive": "magma_cube",
				"transparent": "entity_alphablend",
				"transparent_additive": "entity_beam_additive",
				"death_fade": "death_fade"
			},
			"identifier": "nom:earth_wall",
			"textures": {
				"stone": "textures/entity/earth_bentity/earth_wall_stone",
				"dirt": "textures/entity/earth_bentity/earth_wall_dirt",
				"grass": "textures/entity/earth_bentity/earth_wall_grass",
				"diorite": "textures/entity/earth_bentity/earth_wall_diorite",
				"stonebrick": "textures/entity/earth_bentity/earth_wall_stonebrick",
				"gravel": "textures/entity/earth_bentity/earth_wall_gravel",
				"cobblestone": "textures/entity/earth_bentity/earth_wall_cobblestone",
				"andesite": "textures/entity/earth_bentity/earth_wall_andesite",
				"polished_andesite": "textures/entity/earth_bentity/earth_wall_andesite_smooth",
				"snow": "textures/entity/earth_bentity/earth_wall_snow",
				"course_dirt": "textures/entity/earth_bentity/earth_wall_coarse_dirt",
				"granite": "textures/entity/earth_bentity/earth_wall_granite",
				"sand": "textures/entity/earth_bentity/earth_wall_sand",
				"red_sand": "textures/entity/earth_bentity/earth_wall_sand_red",
				"black_concrete": "textures/entity/earth_bentity/earth_wall_concrete_black",
				"red_concrete": "textures/entity/earth_bentity/earth_wall_concrete_red",
				"rar_floor": "textures/entity/earth_bentity/earth_wall_terracotta_black"
			},
			"geometry": {
				"default": "geometry.earth_wall",
				"inflated": "geometry.earth_wall_outline"
			},
			"animations": {
				"release": "animation.bentity.earth_wall.release",
				"retract": "animation.bentity.earth_wall.retract",
				"hold": "animation.bentity.earth_wall.hold",
				"charge": "animation.bentity.earth_wall.charge",
				"explode": "animation.bentity.earth_wall.explode",
				"expire": "animation.bentity.earth_wall.expire",
				"controller": "controller.animation.bentity.earth_wall",
				"y_offset": "animation.bentity.earth_wall.y_offset",
				"earth_wall_tester": "animation.earth_wall.test",
				"earth_wall_tester2": "animation.earth_wall.test2",
				"earth_wall_tester3": "animation.earth_wall.test3",
				"earth_wall_tester4": "animation.earth_wall.test4",
				"earth_wall_tester5": "animation.earth_wall.test5",
				"earth_wall_tester6": "animation.earth_wall.test6",
				"random_pose": "animation.bentity.earth_wall.pose",
				"earth_wall_debris": "animation.earth_wall.debris",
				"earth_wall_summon_particles": "animation.earth_wall.earth_wall_particles",
				"earth_wall_explode_particles": "animation.earth_wall.explode_particles",
				"charge_pebbles": "animation.earth_wall.charge_pebbles",
				"retract_particles": "animation.earth_wall.retract"
			},
			"particle_effects": {
				"summon": "nom:earth_wall_summon",
				"summon_base": "nom:earth_wall_summon_base",
				"collapse": "nom:earth_wall_collapse",
				"debris": "nom:earth_block_debris",
				"dust": "nom:earth_block_dust",
				"pebbles": "nom:earth_wall_charge"
			},
			"sound_effects": {
				"test": "earth_wall_loop_charge",
				"test2": "earth_wall_loop_charge_urgent",
				"test3": "mob.pig.say",
				"test4": "earth_wall_impact",
				"test5": "earth_wall_fail",
				"test6": "earth_wall_fail"
			},
			"render_controllers": [
				"controller.render.earth_wall",
				"controller.render.earth_wall_outline"
			]
		}
	}
}